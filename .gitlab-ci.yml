stages:
  - build
  - deploy

build docker image:
  stage: build

  image:
    name: docker

  services:
    - docker:dind

  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin

  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"

  after_script:
    - docker logout

  # Only run build if Dockerfile changes
  rules:
    - changes:
      - Dockerfile

print env vars:
  stage: deploy

  script:
    - env

  environment:
    name: production
    url: https://$DOMAIN_NAME

  rules:
    # Rule if commit branch is main (no others)
    # - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    #   when: manual
    # Rule if scheduled
    - if: $CI_PIPELINE_SOURCE == "schedule"

doppler test:
  stage: build
  script:
    - apt update && apt install -y curl gnupg
    - curl -Ls --tlsv1.2 --proto "=https" --retry 3 https://cli.doppler.com/install.sh | sh
    - doppler run -- echo $TEST_DOPPLER_SECRET
