---
version: "3"

tasks:

  main:
    desc: ☸ Main k3s play
    dir: provision/k3s-ansible
    deps: [':lxc:k3s1']
    aliases: ["m"]
    cmds:
      - task: :doppler:generate-k3s-ansible-inventory
      - "{{.K3S_ANSIBLE_PLAYBOOK_CMD}} site.yml {{.CLI_ARGS}}"
      - task: scp-kubeconfig
      # - task: :flux:install
      - task: :doppler:token-cluster
      - task: :doppler:token-cluster

  reset:
    desc: ☸ Reset k3s stack from beginning of it's inception
    dir: provision/k3s-ansible
    aliases: ["r"]
    cmds:
      - task: :doppler:generate-k3s-ansible-inventory
      - "{{.K3S_ANSIBLE_PLAYBOOK_CMD}} reset.yml {{.CLI_ARGS}}"

  watch-kustomizations:
    interactive: true
    cmds:
      - flux get kustomizations --watch

  run-tags:
    desc: ☸ Run only the tags passed in separated by comma (e.g. make run-tags update_compose,logrotate)
    dir: provision/k3s-ansible
    cmds:
      - task: :doppler:generate-k3s-ansible-inventory
      - "{{.K3S_ANSIBLE_PLAYBOOK_CMD}} --tags {{.CLI_ARGS}} k3s.yml"

  run-tags-v:
    desc: ☸ VERBOSE - Same as above
    dir: provision/k3s-ansible
    cmds:
      - task: :doppler:generate-k3s-ansible-inventory
      - "{{.K3S_ANSIBLE_PLAYBOOK_CMD}} -vvv --tags {{.CLI_ARGS}} k3s.yml"

  # helm-charts:
  #   desc: ☸ Deploy helm charts
  #   dir: provision/k3s-ansible
  #   cmds:
  #     - task: :doppler:generate-k3s-ansible-inventory
  #     - "{{.K3S_ANSIBLE_PLAYBOOK_CMD}} --tags \"helm_charts\" k3s.yml {{.CLI_ARGS}}"

  scp-kubeconfig:
    desc: Copy k3s kube config from single node
    aliases: ["s"]
    status:
      - "test -f ${HOME}/.kube/config"
    cmds:
      - task: mkdir-kubeconfig
      - scp root@10.10.0.24:~/.kube/config ~/.kube/config

  scp-kubeconfig-vagrant:
    desc: Copy k3s kube config from single molecule node
    internal: true
    cmds:
      - task: mkdir-kubeconfig
      - scp vagrant@192.168.30.50:~/.kube/config ~/.kube/config

  mkdir-kubeconfig:
    internal: true
    cmds:
      - "test -d ${HOME}/.kube || mkdir ${HOME}/.kube"
