---
version: "3"

tasks:

  main:
    desc: ☸ Main k3s play
    dir: provision/k3s-ansible
    deps: [':lxc:k3s1']
    vars:
    aliases: ["m"]
    cmds:
      - task: :doppler:generate-k3s-ansible-inventory
      - "{{.K3S_ANSIBLE_PLAYBOOK_CMD}} site.yml {{.CLI_ARGS}}"
      - task: scp-kubeconfig
      - task: token-cluster
      # - task: :flux:install
      - task: discord-secret

  discord-secret:
    desc: Deploy dicsord webhook URL as secret to k3s.. will be flux later
    internal: true
    cmds:
      - kubectl create secret generic discord --from-literal=address=$(doppler secrets get DISCORD_FLUX_WEBHOOK_URL --plain)

  # Below is being migrated to doppler in tf
  token-cluster:
    desc: Create a config service token and push this to doppler and the cluster as a secret so that all doppler secrets can be loaded
    aliases: ["tc"]
    cmds:
      - task: token-doppler
      - task: push-token-cluster

  token-doppler:
    desc: Create a config service token
    internal: true
    status:
      - ! doppler configs tokens | grep -q doppler
    cmds:
      - |
        K3S_DOPPLER_SERVICE_TOKEN=$(doppler configs tokens create doppler-kubernetes-operator --plain) &&
        echo -e "${K3S_DOPPLER_SERVICE_TOKEN}" | doppler secrets set K3S_DOPPLER_SERVICE_TOKEN

  push-token-cluster:
    desc: import the Doppler service token into k3s cluster
    internal: true
    vars:
      K3S_DOPPLER_SERVICE_TOKEN:
        sh: doppler secrets get K3S_DOPPLER_SERVICE_TOKEN --plain
      DOPPLER_TOKEN_IN_K3S:
        sh: kubectl get secret doppler-token-secret -n doppler-operator-system -o json --ignore-not-found=true | jq -r '.data.serviceToken' | base64 -d
    status:
      - "[[ '{{.K3S_DOPPLER_SERVICE_TOKEN}}' == '{{.DOPPLER_TOKEN_IN_K3S}}' ]]"
    cmds:
      - kubectl delete secret doppler-token-secret -n doppler-operator-system --ignore-not-found
      - kubectl create secret generic doppler-token-secret -n doppler-operator-system --from-literal=serviceToken={{.K3S_DOPPLER_SERVICE_TOKEN}}

  reset:
    desc: ☸ Reset k3s stack from beginning of it's inception
    dir: provision/k3s-ansible
    aliases: ["r"]
    cmds:
      - task: :doppler:generate-k3s-ansible-inventory
      - "{{.K3S_ANSIBLE_PLAYBOOK_CMD}} reset.yml {{.CLI_ARGS}}"

  watch-kustomizations:
    interactive: true
    cmds:
      - flux get kustomizations --watch

  run-tags:
    desc: ☸ Run only the tags passed in separated by comma (e.g. make run-tags update_compose,logrotate)
    dir: provision/k3s-ansible
    cmds:
      - task: :doppler:generate-k3s-ansible-inventory
      - "{{.K3S_ANSIBLE_PLAYBOOK_CMD}} --tags {{.CLI_ARGS}} k3s.yml"

  run-tags-v:
    desc: ☸ VERBOSE - Same as above
    dir: provision/k3s-ansible
    cmds:
      - task: :doppler:generate-k3s-ansible-inventory
      - "{{.K3S_ANSIBLE_PLAYBOOK_CMD}} -vvv --tags {{.CLI_ARGS}} k3s.yml"

  # helm-charts:
  #   desc: ☸ Deploy helm charts
  #   dir: provision/k3s-ansible
  #   cmds:
  #     - task: :doppler:generate-k3s-ansible-inventory
  #     - "{{.K3S_ANSIBLE_PLAYBOOK_CMD}} --tags \"helm_charts\" k3s.yml {{.CLI_ARGS}}"

  scp-kubeconfig:
    desc: Copy k3s kube config from single node
    aliases: ["s"]
    status:
      - "test -f ${HOME}/.kube/config"
      - "test -f /mnt/c/.kube/config"
    cmds:
      - task: mkdir-kubeconfig
      - scp root@10.10.0.24:~/.kube/config ~/.kube/config

  scp-kubeconfig-vagrant:
    desc: Copy k3s kube config from single molecule node
    internal: true
    cmds:
      - task: mkdir-kubeconfig
      - scp vagrant@192.168.30.50:~/.kube/config ~/.kube/config

  mkdir-kubeconfig:
    internal: true
    cmds:
      - "test -d ${HOME}/.kube || mkdir ${HOME}/.kube"

  scp-kubeconfig-wsl:
    desc: Copy k3s kube config from single node to windows host for Lens to work (must not be run in workstation container)
    aliases: ["sw"]
    status:
      - "test -f /mnt/c/.kube/config"
    cmds:
      - "test -d /mnt/c/.kube || mkdir /mnt/c/.kube"
      - scp root@10.10.0.24:~/.kube/config /mnt/c/.kube/config
