---
version: "3"

vars:
  RUNNER_IMAGE_NAME: gha-runner
  DOCKER_BUILD_CMD: docker build -t {{.RUNNER_IMAGE_NAME}} -f docker/runner/Dockerfile
  DOCKER_RUN_CMD:
    docker container inspect {{.RUNNER_IMAGE_NAME}} > /dev/null 2>&1 || docker run -d -it --rm 
  DOCKER_EXEC_CMD: docker exec -it {{.RUNNER_IMAGE_NAME}}

tasks:

  main:
    desc: üê≥ Main docker play
    dir: provision/ansible
    deps: [':proxmox:provision-docker']
    aliases: ["m"]
    cmds:
      - task: :doppler:generate-ansible-inventory
      - "{{.ANSIBLE_PLAYBOOK_CMD}} {{.ANSIBLE_PLAYBOOK_DIR}}/docker.yml {{.CLI_ARGS}}"

  update-compose:
    desc: üê≥ Updated docker-compose files
    dir: provision/ansible
    cmds:
      - task: :doppler:generate-ansible-inventory
      - "{{.ANSIBLE_PLAYBOOK_CMD}} --tags \"update_compose\" -e \"update_compose=true\" {{.ANSIBLE_PLAYBOOK_DIR}}/docker.yml {{.CLI_ARGS}}"

  copy-files:
    desc: üê≥ Copy docker files to docker vm
    dir: provision/ansible
    cmds:
      - task: :doppler:generate-ansible-inventory
      - "{{.ANSIBLE_PLAYBOOK_CMD}} --tags \"copy_files,update_compose\" -e \"copy_files=true\" -e \"update_compose=true\" {{.ANSIBLE_PLAYBOOK_DIR}}/docker.yml {{.CLI_ARGS}}"

  setup-containers:
    desc: üê≥ Run setup docker containers tasks
    dir: provision/ansible
    cmds:
      - task: :doppler:generate-ansible-inventory
      - "{{.ANSIBLE_PLAYBOOK_CMD}} --tags \"setup_containers\" -e \"setup_containers=true\" {{.ANSIBLE_PLAYBOOK_DIR}}/docker.yml {{.CLI_ARGS}}"

  run-tags:
    desc: üê≥ Run only the tags passed in separated by comma (e.g. make run-tags update_compose,logrotate)
    dir: provision/ansible
    cmds:
      - task: :doppler:generate-ansible-inventory
      - "{{.ANSIBLE_PLAYBOOK_CMD}} --tags {{.CLI_ARGS}} {{.ANSIBLE_PLAYBOOK_DIR}}/docker.yml"

  run-tags-v:
    desc: üê≥ VERBOSE - Same as above
    dir: provision/ansible
    cmds:
      - task: :doppler:generate-ansible-inventory
      - "{{.ANSIBLE_PLAYBOOK_CMD}} -vvv --tags {{.CLI_ARGS}} {{.ANSIBLE_PLAYBOOK_DIR}}/docker.yml"

  # restore-containers:
  #   desc: üê≥ Restore docker container data from backups on NFS share - Pass the inventory_hostname/group_names of the item you want to run this on
  #   dir: provision/ansible
  #   cmds:
  #     - echo "WARNING - This is going to restore the containers in place of whatever is there currently. Press any key to continue..."; read break;
  #     - doppler run -- ansible-playbook -i inventory/hosts.ini --tags "restore_docker_data" -e "restore_docker_data=true" playbooks/docker.yml --limit {{.CLI_ARGS}}

  runner:
    desc: Build and run the runner container locally
    cmds:
      - task: build-runner
      - task: run-runner
      - task: exec-runner

  build-runner:
    desc: Builds the runner image locally
    internal: true
    status:
      - "docker images | grep -q '{{.RUNNER_IMAGE_NAME}}'"
    cmds:
      - "{{.DOCKER_BUILD_CMD}} ."

  build-runner-no-cache:
    desc: Rebuild the image without using cache
    cmds:
      - "{{.DOCKER_BUILD_CMD}} --no-cache ."

  run-runner:
    desc: Run the runner from the locally built image (also builds the image)
    internal: true
    run: once
    cmds:
      - "{{.DOCKER_RUN_CMD}} --name {{.RUNNER_IMAGE_NAME}} {{.RUNNER_IMAGE_NAME}}"

  exec-runner:
    desc: Get shell of the runner container
    internal: true
    run: once
    cmds:
      - "{{.DOCKER_EXEC_CMD}} bash"
