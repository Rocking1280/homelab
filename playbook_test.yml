---
- name: Test Playbook
  hosts: proxmox
  # hosts: docker
  # Load in our default and vaulted vars
  vars_files:
    - vars/vault.yml

  pre_tasks:
    # Allow user to override defaults with their custom config file.
    # include_vars has a higher precedence than vars_files above, so import these files as overrides.
    - name: Include playbook configuration.
      include_vars: "{{ item }}"
      with_fileglob:
        - "{{ playbook_dir }}/vars/config.yml"
      # Special tag 'always' -> https://docs.ansible.com/ansible/latest/user_guide/playbooks_tags.html#special-tags-always-and-never
      tags: ["always"]

    # Setup some required variables for the rest of the playbook
    - name: Instantiate some extra vars from included vars
      set_fact:
        user_dir: /home/{{ main_user }}
        docker_dir: /home/{{ main_user }}/docker
        git_dir: /home/{{ main_user }}/git/personal
        secrets_dir: /home/{{ main_user }}/docker/secrets
      tags: ["always"]

    # This is to get the PUID and PGID variables to use later in multiple areas
    - name: Get user info or create a user if one doesn't exist
      import_tasks: tasks/linux/check_user.yml
      tags: ["always"]

  # Import handlers for all tasks
  handlers:
    - import_tasks: handlers/proxmox.yml
    - import_tasks: handlers/docker.yml

##################
### Start here ###
##################

  # roles:
  #   - create-proxmox-template-from-ubuntu-cloud-image

  tasks:
    # - name: Clone template to new VM
    #   proxmox_kvm:
    #     node: "{{ pve.proxmox_node }}"
    #     api_user: "{{ pve.proxmox_api_user }}"
    #     api_password: "{{ pve.proxmox_api_pass }}"
    #     api_host: "{{ proxmox_ip }}"
    #     clone: "{{ item.value.template | default(vms_def.template) }}"
    #     full: "yes"
    #     name: "{{ item.value.name }}"
    #     storage: "{{ item.value.storage | default(vms_def.storage) }}" 
    #     timeout: "{{ pve.clone_timeout }}"
    #     newid: "{{ item.value.vmid }}"
    #   register: vm_new
    #   loop: "{{ vms | dict2items }}"
