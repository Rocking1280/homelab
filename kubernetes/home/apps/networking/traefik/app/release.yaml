---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: traefik
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: flux-system
  dependsOn:
    - name: cert-manager
      namespace: cert-manager
  values:
    globalArguments:
      ##############################################
      ### COMMENT THIS OUT AFTER AUTH IS WORKING ###
      ##############################################
      # - "--api.insecure=true"
      - "--global.sendanonymoususage=false"
      - "--global.checknewversion=false"
      # This is enabled for services that use self-signed certs and don't have an http endpoint.
      # I also want to ensure everything is behind oauth and using a TCP router doesn't allow for middlewares.
      # Skipping cert verification checks behind traefik is a better option than disabling oauth imo as it requires a man in the middle attack from behind traefik/oauth.
      - "--serverstransport.insecureskipverify=true"
      # - "--providers.kubernetesingress.ingressclass=traefik"
      # - "--providers.file.directory=/data"
      # - "--providers.file.watch=true"
      # - "--metrics.prometheus=true"
      # - "--metrics.prometheus.entryPoint=metrics"
      # - "--entryPoints.web.address=:80"
      # - "--entryPoints.websecure.address=:443"
      - "--entryPoints.websecure.forwardedHeaders.trustedIPs=10.0.0.0/8,192.168.0.0/16,172.16.0.0/12,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17,2400:cb00::/32,2606:4700::/32,2803:f800::/32,2405:b500::/32,2405:8100::/32,2a06:98c0::/29,2c0f:f248::/32"
      # - "--entryPoints.dashboard.address=:9000"
    additionalArguments:
      - "--providers.kubernetesingress.ingressendpoint.ip=10.10.0.80"
      # - "--log.filePath=/var/log/traefik.log"
    logs:
      general:
        format: json
        level: DEBUG  # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC"
      access:
        enabled: true
        format: json
        # filePath: "/var/log/traefik/access.log"
        # bufferingSize: 100  # Configuring a buffer of 100 lines
        filters: {}
          # statuscodes: "200,300-302"
          # retryattempts: true
          # minduration: 10ms
    deployment:
      # kind: Deployment
      enabled: true
      replicas: 1
    service:
      enabled: true
      type: LoadBalancer
      spec:
        loadBalancerIP: 10.10.0.80
        # externalTrafficPolicy: Local
      # annotations:
      #   metallb.universe.tf/address-pool: dev-infra
    ports:
      web:
        expose: true
        port: 80
        exposedPort: 80
        redirectTo: websecure
      websecure:
        expose: true
        port: 443
        exposedPort: 443
        tls:
          enabled: true
          options: "default"
      traefik:
        expose: true
        port: 9000
      metrics:
        port: 9100
        expose: true

    ingressRoute:
      dashboard:
        enabled: false

    providers:
      kubernetesCRD:
        enabled: true
        ingressClass: traefik-external
        allowCrossNamespace: true
        allowExternalNameServices: true
      kubernetesIngress:
        enabled: true
        allowExternalNameServices: true
        publishedService:
          enabled: false

    # rbac:
    #   enabled: true

    ingressClass:
      enabled: true
      isDefaultClass: true
      fallbackApiVersion: v1

    tlsOptions:
      default:
        minVersion: VersionTLS12
        maxVersion: VersionTLS13
        sniStrict: true
    # pilot:
    #   enabled: false
    # experimental:
    #   plugins:
    #     enabled: false
    # resources:
    #   requests:
    #     memory: 100Mi
    #     cpu: 500m
    #   limits:
    #     memory: 500Mi
