---
#######################################
### THIS FILE IS MANAGED BY ANSIBLE ###
###    PLEASE MAKE CHANGES THERE    ###
#######################################

version: "3.7"

########################### EXTENSION FIELDS

# Default TZ, uid and pid
# To use this put this block in your service: "<<: *default-tz-uid-gid"
x-environment: &default-tz-uid-gid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID

# To use this put this block in your service: "<<: *logging"
x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://${SERVER_IP}:${LOKI_PORT}/loki/api/v1/push"

########################### NETWORKS

networks:
  traefik_proxy:
    name: traefik_proxy
    external: true

########################### SERVICES

services:
  # Home Assistant Core - Home Automation
  # https://hub.docker.com/r/homeassistant/home-assistant/
  # We do traefik via file rule, because of host networking
  # Also install the following from HACS:
  # https://github.com/thomasloven/lovelace-slider-entity-row
  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:stable
    init: true
    restart: always
    healthcheck:
      test: curl --connect-timeout 10 --silent -f http://localhost:8123/ || exit 1
      interval: 45s
      timeout: 10s
      retries: 3
    network_mode: host
    depends_on:
      influxdb:
        condition: service_healthy
      mariadb:    # MariaDB is optional (only if you would like to use a different database for HA).
        condition: service_healthy
      mqtt:     # mqtt is optional (only if you want to add Zigbee devices and have a zigbee sniffer attached).
        condition: service_started
      zigbee2mqtt:  # zigbee2mqtt is optional (only if you want to add Zigbee devices and have a zigbee sniffer attached).
        condition: service_started
    ports:
      - "${HOME_ASSISTANT_PORT}:8123"
    devices:    # If you have any zigbee usb devices, mount them here
      - ${ZIGBEE_ADAPTER_TTY}:/dev/ttyACM0    # Use this for conbee II
    privileged: true
    volumes:
      - ${DOCKERDIR}/appdata/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      #- /media/ssd/motioneye:/media/motioneye
    environment:
      <<: *default-tz-uid-gid
      # MYSQL_USER: ${MARIADB_USER}
      # MYSQL_PASSWORD: ${MARIADB_PASSWORD}
      # MYSQL_DATABASE: ${MARIADB_DATABASE}
      # MYSQL_HOST: ${SERVER_IP}
    labels:
      ## Exclude From Watchtower
      - "com.centurylinklabs.watchtower.enable=false"
      ## Traefik ##
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.hass-rtr.entrypoints=https"
      - "traefik.http.routers.hass-rtr.rule=Host(`hass.${DOMAINNAME}`)"
      ## Middlewares
      - "traefik.http.routers.hass-rtr.middlewares=chain-authelia@file"
      ## HTTP Services
      - "traefik.http.routers.hass-rtr.service=hass-svc"
      - "traefik.http.services.hass-svc.loadbalancer.server.port=8123"
    <<: *logging

  # Provides a filesystem-browser and text-editor to modify files on the machine the configurator is running on
  # https://hub.docker.com/r/causticlab/hass-configurator-docker/
  hass-configurator:
    image: "causticlab/hass-configurator-docker:latest"
    init: true
    container_name: hass-configurator
    restart: always
    user: "${PUID}:${PGID}"
    ports:
      - "${HASS_CONFIGURATOR_PORT}:3218/tcp"
    networks:
      - traefik_proxy
    depends_on:
      - homeassistant
    volumes:
      - "${DOCKERDIR}/appdata/hass-configurator:/config"
      - "${DOCKERDIR}/appdata/homeassistant:/hass-config"
      # For git Integration
      - "${SSH_KEY_PRIVATE}:/root/.ssh/id_rsa:ro"
      - "${SSH_KEY_PUBLIC}:/root/.ssh/id_rsa.pub:ro"
      - "${USERDIR}/.ssh/known_hosts:/root/.ssh/known_hosts:rw"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.hassconfigurator-rtr.entrypoints=https"
      - "traefik.http.routers.hassconfigurator-rtr.rule=Host(`hass-config.${DOMAINNAME}`)"
      ## Middlewares
      - "traefik.http.routers.hassconfigurator-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.hassconfigurator-rtr.service=hassconfigurator-svc"
      - "traefik.http.services.hassconfigurator-svc.loadbalancer.server.port=3218"
    <<: *logging

  # Eufy security websocket addon - for homeassistant
  # https://hub.docker.com/r/bropat/eufy-security-ws
  eufy-security-ws:
    container_name: eufy-security-ws
    image: "bropat/eufy-security-ws"
    init: true
    restart: always
    ports:
      - "${EUFY_SECURITY_WS_PORT}:3000/tcp"   # Websocket app port used for home assistant integration
    depends_on:
      - homeassistant
    environment:
      USERNAME: ${EUFY_ADDON_EMAIL}
      PASSWORD: ${EUFY_ADDON_PASSWORD}
    # volumes:
    #   - "${DOCKERDIR}/appdata/hass-configurator:/config"
    #   - "${DOCKERDIR}/appdata/homeassistant:/hass-config"
    # user: "${PUID}:${PGID}"
    <<: *logging

  # Mosquitto - MQTT Broker
  # To set this up, ensure the files from the DOCKERDIR folder are transferred to the docker VM
  # i.e. mosquitto.conf, passwd, mosquitto.log files and set permissions to 775 user:docker
  # Then run the following to setup a user/password to publish and subscribe to the queues:
  # dexec mqtt /bin/sh   # To enter the container
  # mosquitto_passwd -b /mosquitto/config/passwd <username> <passwd>  # Generate the passwd file
  # You can test this from Home Assistant with the following commands:
  # mosquitto_sub -h x.x.x.x -p 1883 -u username -P password -v -t "home-assistant/#"
  # mosquitto_pub -h x.x.x.x -p 1883 -u username -P password -t home-assistant/test -m "test"
  # https://hub.docker.com/_/eclipse-mosquitto
  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:latest
    init: true
    restart: always
    healthcheck:
      test: nc -z localhost 1883
      interval: 60s
      timeout: 3s
      retries: 3
    user: ${PUID}:${PGID}
    security_opt:
      - no-new-privileges:true
    ports:
      # If you change these, please reflect the "listener" in the config file
      - "${MOSQUITTO_HTTP_PORT}:1883"   # http
      - "${MOSQUITTO_WS_PORT}:9001"     # websockets
      # - "${MOSQUITTO_HTTPS_PORT}:8883"  # https
    volumes:
      - ${DOCKERDIR}/appdata/mqtt/config:/mosquitto/config
      - ${DOCKERDIR}/appdata/mqtt/log:/mosquitto/log
      - ${DOCKERDIR}/appdata/mqtt/data:/mosquitto/data
    environment:
      TZ: ${TZ}

  # zigbee2mqtt
  # https://hub.docker.com/r/koenkk/zigbee2mqtt/
  # You also need to add home assistant -> https://github.com/zigbee2mqtt/hassio-zigbee2mqtt
  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:latest
    init: true
    restart: always
    network_mode: host
    user: ${PUID}:${PGID}
    healthcheck:
      test: nc -z localhost ${ZIGBEE2MQTT_PORT}
      interval: 60s
      timeout: 3s
      retries: 3
    # To add this container to the 'dialout' group so it can use the device - ll /dev/ttyACM0 (or whatever your device location is)
    group_add:
      - dialout
    ports:
      # Frontend port
      - ${ZIGBEE2MQTT_PORT}:${ZIGBEE2MQTT_PORT}
    environment:
      - TZ=${TZ}
    volumes:
      - ${DOCKERDIR}/appdata/zigbee2mqtt:/app/data
      - /run/udev:/run/udev:ro 
    devices:
      # This is the conbee device mapping
      - "${ZIGBEE_ADAPTER_TTY}:/dev/ttyZigbee"
    privileged: true
    <<: *logging

  # Display zigbee devices and the status of each of them.
  # https://hub.docker.com/r/carldebilly/zigbee2mqttassistant
  # https://github.com/yllibed/Zigbee2MqttAssistant
  zigbee2mqttassistant:
    container_name: zigbee2mqttassistant
    image: carldebilly/zigbee2mqttassistant
    init: true
    restart: unless-stopped
    depends_on:
      zigbee2mqtt:
        condition: service_started
    ports:
      - ${ZIGBEE2MQTTASSISTANT_PORT}:80
    networks:
      - traefik_proxy
    environment:
      - Z2MA_SETTINGS__MQTTSERVER=${SERVER_IP}    # IP/Hostname of the mqtt container
      - Z2MA_SETTINGS__MQTTUSERNAME=${MQTT_USER}
      - Z2MA_SETTINGS__MQTTPASSWORD=${MQTT_PASS}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.zigbee2mqttassistant-rtr.entrypoints=https"
      - "traefik.http.routers.zigbee2mqttassistant-rtr.rule=Host(`zigbee-assistant.${DOMAINNAME}`)"
      ## Middlewares
      - "traefik.http.routers.zigbee2mqttassistant-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.zigbee2mqttassistant-rtr.service=zigbee2mqttassistant-svc"
      - "traefik.http.services.zigbee2mqttassistant-svc.loadbalancer.server.port=80"
    <<: *logging
