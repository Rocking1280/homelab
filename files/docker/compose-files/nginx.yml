---
#######################################
### THIS FILE IS MANAGED BY ANSIBLE ###
###    PLEASE MAKE CHANGES THERE    ###
#######################################

version: "3.7"

########################### EXTENSION FIELDS

# To use this put this block in your service: "<<: *logging"
x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://${SERVER_IP}:${LOKI_PORT}/loki/api/v1/push"

########################### NETWORKS

networks:
  traefik_proxy:
    name: traefik_proxy
    external: true

########################### SERVICES

services:
  # Based off -> https://hub.docker.com/_/nginx/
  # Nginx for my website and builds the docs from mkdocs
  nginx:
    # This is a private repo with a custom nginx image, ci/cd checks and container build pipelines.
    image: registry.gitlab.com/sami-group/docker/nginx
    # Alternate to image - pull the repo down (or setup a webhook to pull this on releases to automate it) and build it locally with:
    # build:
    #   context: ${DOCKERDIR}/nginx
    #   dockerfile: Dockerfile
    container_name: nginx
    restart: always
    healthcheck:
      test: curl -sI http://localhost:80
      interval: 60s
      timeout: 3s
      retries: 3
    networks:
      traefik_proxy:
        ipv4_address: 192.168.90.134 # You can specify a static IP
    volumes:
    - "/var/log/nginx:/var/log/nginx"   # For Grafana logging
    ### ALL DONE IN DOCKERFILE NOW (PRIVATE REPO) ###
    # - "${DOCKERDIR}/nginx/conf.d:/etc/nginx/conf.d"
    # - "${DOCKERDIR}/nginx/nginx.conf:/etc/nginx/nginx.conf"
    # - "${DOCKERDIR}/nginx/templates:/etc/nginx/templates"
    # - "${DOCKERDIR}/nginx/html:/usr/share/nginx/html"
    # - "${DOCKERDIR}/nginx/docs:/usr/share/nginx/docs"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.website-rtr.entrypoints=https"
      - "traefik.http.routers.website-rtr.rule=Host(`$DOMAINNAME`, `www.$DOMAINNAME`, `docs.$DOMAINNAME`, `home.$DOMAINNAME`, `homer.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.website-rtr.middlewares=chain-authelia@file"
    environment:
      TZ: ${TZ}
      NGINX_HOST: ${DOMAINNAME}
      NGINX_PORT: 80
    <<: *logging
