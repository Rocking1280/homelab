---
#######################################
### THIS FILE IS MANAGED BY ANSIBLE ###
###    PLEASE MAKE CHANGES THERE    ###
#######################################

version: "3.7"

########################### EXTENSION FIELDS

# To use this put this block in your service: "<<: *logging"
x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://${SERVER_IP}:${LOKI_PORT}/loki/api/v1/push"

########################### NETWORKS

networks:
  traefik_proxy:
    name: traefik_proxy
    external: true

########################### SERVICES

services:
  # Most of the stuff is done in the custom dockerfile, check it out and add/customize the container however you want there.
  api:
    image: registry.gitlab.com/sami-group/docker/api
    init: true
    # build:
    #   context: ${DOCKERDIR}/api
    #   dockerfile: Dockerfile
    container_name: api
    restart: always
    networks:
      - traefik_proxy
    user: ${PUID}:${PGID}
    healthcheck:
      test: curl -fs http://localhost:3000/healthcheck || exit 1
      interval: 1m
      timeout: 3s
      retries: 3
    ports:
      - "${NODE_API_PORT}:3000"
    environment:
      - NODE_ENV=production
      - NPM_CONFIG_LOGLEVEL=info  # warn, info etc.
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.node-api-rtr.entrypoints=https"
      - "traefik.http.routers.node-api-rtr.rule=Host(`api.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.node-api-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.node-api-rtr.service=node-api-svc"
      - "traefik.http.services.node-api-svc.loadbalancer.server.port=3000"
    <<: *logging
