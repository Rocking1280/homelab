---
#######################################
### THIS FILE IS MANAGED BY ANSIBLE ###
###    PLEASE MAKE CHANGES THERE    ###
#######################################

version: "3.7"

########################### EXTENSION FIELDS

# Default TZ, uid and pid
# To use this put this block in your service: "<<: *default-tz-uid-gid"
x-environment: &default-tz-uid-gid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID

# To use this put this block in your service: "<<: *logging"
x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://${SERVER_IP}:${LOKI_PORT}/loki/api/v1/push"

########################### NETWORKS

networks:
  default:
    name: docker_default
    external: true
  traefik_proxy:
    name: traefik_proxy
    external: true
  socket_proxy:
    name: socket_proxy
    external: true

########################### SECRETS

secrets:
  htpasswd:
    file: ${DOCKERDIR}/secrets/htpasswd
  cloudflare_email:
    file: ${DOCKERDIR}/secrets/cloudflare_email
  cloudflare_api_key:
    file: ${DOCKERDIR}/secrets/cloudflare_api_key
  plex_claim:
    file: ${DOCKERDIR}/secrets/plex_claim
  traefik_pilot_token:
    file: ${DOCKERDIR}/secrets/traefik_pilot_token
  gmail_email:
    file: ${DOCKERDIR}/secrets/gmail_address
  # This gmail password needs to be the APPLICATION password, not your main login one.
  # https://support.google.com/accounts/answer/185833?hl=en
  gmail_app_pass:
    file: ${DOCKERDIR}/secrets/gmail_app_pass
  services_username:
    file: ${DOCKERDIR}/secrets/services_username
  services_password:
    file: ${DOCKERDIR}/secrets/services_password
  authelia_jwt_secret:
    file: ${DOCKERDIR}/secrets/authelia_jwt_secret
  authelia_session_secret:
    file: ${DOCKERDIR}/secrets/authelia_session_secret
  authelia_storage_mysql_password:
    file: ${DOCKERDIR}/secrets/authelia_storage_mysql_password

########################### SERVICES

services:
  # Sonarr - TV Shows management
  # https://hub.docker.com/r/linuxserver/sonarr
  # Set url_base in sonarr settings if using PathPrefix
  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    restart: always
    healthcheck:
      test: curl -sI http://localhost:8989
      interval: 60s
      timeout: 3s
      retries: 3
    networks:
      traefik_proxy:
        ipv4_address: 192.168.90.164 # You can specify a static IP - I also created a non-proxied DNS record like 'sonarr-dc.domain.com' pointing to this IP so i don't need to reference this all the time.
    security_opt:
      - no-new-privileges:true
    ports:
      - ${SONARR_PORT}:8989
    volumes:
      # Media cover is a separate volume as it's where I'll be storing metadata to severely reduce the space required when I backup these containers
      - ${DOCKERDIR}/shared/sonarr/MediaCover:/config/MediaCover
      - ${DOCKERDIR}/sonarr:/config
      - ${USERDIR}/mount/downloads:/downloads
      - ${USERDIR}/mount/video/tv:/tv
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      <<: *default-tz-uid-gid
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      - "traefik.http.routers.sonarr-rtr-bypass.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr-bypass.rule=Host(`sonarr.$DOMAINNAME`) && (Headers(`X-Api-Key`, `$SONARR_API_KEY`) || Query(`apikey`, `$SONARR_API_KEY`))"
      - "traefik.http.routers.sonarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.sonarr-rtr.entrypoints=https"
      - "traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.$DOMAINNAME`)"
      - "traefik.http.routers.sonarr-rtr.priority=99"
      ## Middlewares
      - "traefik.http.routers.sonarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      - "traefik.http.routers.sonarr-rtr-bypass.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"
    <<: *logging
